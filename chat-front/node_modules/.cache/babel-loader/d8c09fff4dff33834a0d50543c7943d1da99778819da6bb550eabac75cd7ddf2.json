{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport SockJS from 'sockjs-client';\nimport Stomp from 'webstomp-client';\n// import axios from 'axios';\n\nexport default {\n  data() {\n    return {\n      messages: [],\n      newMessage: \"\",\n      stompClient: null,\n      token: \"\",\n      senderEmail: null,\n      roomId: null\n    };\n  },\n  created() {\n    this.senderEmail = localStorage.getItem(\"email\");\n    this.roomId = this.$route.params.roomId;\n    this.connectWebSocket();\n  },\n  //사용자가 현재 라우트에서 다른 라우트로 이동하려고 할 때 호출되는 훅 함수.\n  beforeRouteLeave(to, from, next) {\n    this.disconnectWebSocket();\n    next();\n  },\n  //화면을 완전히 종료 했을 때\n  beforeUnmount() {\n    this.disconnectWebSocket();\n  },\n  methods: {\n    connectWebSocket() {\n      if (this.stompClient && this.stompClient.connected) return;\n      // sockjs는 websocket을 내장한 향상된 js라이브러리 http엔드포인트 사용.\n      const sockJs = new SockJS(`${process.env.VUE_APP_API_BASE_URL}/connect`);\n      this.stompClient = Stomp.over(sockJs);\n      this.token = localStorage.getItem(\"token\");\n      this.stompClient.connect({\n        Authorization: `Bearer ${this.token}`\n      }, () => {\n        this.stompClient.subscribe(`/topic/${this.roomId}`, message => {\n          const parseMessage = JSON.parse(message.body);\n          this.messages.push(parseMessage);\n          this.scrollToBottom();\n        });\n      });\n    },\n    sendMessage() {\n      if (this.newMessage.trim() === \"\") return;\n      const message = {\n        senderEmail: this.senderEmail,\n        message: this.newMessage\n      };\n      this.stompClient.send(`/publish/`, JSON.stringify(message));\n      this.newMessage = \"\";\n    },\n    scrollToBottom() {\n      this.$nextTick(() => {\n        const chatBox = this.$el.querySelector(\".chat-box\");\n        chatBox.scrollTop = chatBox.scrollHeight;\n      });\n    },\n    disconnectWebSocket() {\n      if (this.stompClient && this.stompClient.connected) {\n        this.stompClient.unsubscribe(`/topic/${this.roomId}`);\n        this.stompClient.disconnect();\n      }\n    }\n  }\n};","map":{"version":3,"names":["SockJS","Stomp","data","messages","newMessage","stompClient","token","senderEmail","roomId","created","localStorage","getItem","$route","params","connectWebSocket","beforeRouteLeave","to","from","next","disconnectWebSocket","beforeUnmount","methods","connected","sockJs","process","env","VUE_APP_API_BASE_URL","over","connect","Authorization","subscribe","message","parseMessage","JSON","parse","body","push","scrollToBottom","sendMessage","trim","send","stringify","$nextTick","chatBox","$el","querySelector","scrollTop","scrollHeight","unsubscribe","disconnect"],"sources":["/Users/dengo/Desktop/java/spring_websocket/chat-front/src/views/StompChatPage.vue"],"sourcesContent":["<template>\n  <v-container>\n    <v-row justify=\"center\">\n      <v-col cols=\"12\" md=\"8\">\n        <v-card>\n          <v-card-title class=\"text-center text-h5\">\n            채팅\n          </v-card-title>\n          <v-card-text>\n            <div class=\"chat-box\">\n              <div\n              v-for=\"(msg, index) in messages\"\n              :key=\"index\"\n              :class=\"['chat-message', msg.senderEmail ===this.senderEmail ? 'sent':'received']\"\n              >\n                <strong>{{msg.senderEmail}}: </strong> {{msg.message}}\n              </div>\n            </div>\n            <v-text-field\n              v-model=\"newMessage\"\n              label=\"메시지 입력\"\n              @keyup.enter=\"sendMessage\"\n\n            />\n              <v-btn color=\"primary\" block @click=\"sendMessage\">전송</v-btn>\n          </v-card-text>\n\n        </v-card>\n      </v-col>\n\n    </v-row>\n\n  </v-container>\n</template>\n\n\n<script>\nimport SockJS from 'sockjs-client';\nimport Stomp from 'webstomp-client';\n// import axios from 'axios';\n\nexport default {\n  data(){\n    return{\n      messages: [],\n      newMessage: \"\",\n      stompClient: null,\n      token: \"\",\n      senderEmail: null,\n      roomId: null,\n    }\n  },\n  created(){\n    this.senderEmail = localStorage.getItem(\"email\");\n    this.roomId = this.$route.params.roomId;\n    this.connectWebSocket();\n  },\n  //사용자가 현재 라우트에서 다른 라우트로 이동하려고 할 때 호출되는 훅 함수.\n  beforeRouteLeave(to, from, next) {\n    this.disconnectWebSocket();\n    next();\n  },\n  //화면을 완전히 종료 했을 때\n  beforeUnmount() {\n    this.disconnectWebSocket();\n  },\n  methods:{\n    connectWebSocket(){\n      if(this.stompClient && this.stompClient.connected) return;\n      // sockjs는 websocket을 내장한 향상된 js라이브러리 http엔드포인트 사용.\n      const sockJs = new SockJS(`${process.env.VUE_APP_API_BASE_URL}/connect`)\n      this.stompClient = Stomp.over(sockJs);\n      this.token = localStorage.getItem(\"token\");\n      this.stompClient.connect({\n            Authorization: `Bearer ${this.token}`\n\n          },\n          ()=>{\n            this.stompClient.subscribe(`/topic/${this.roomId}`,(message)=>{\n              const parseMessage = JSON.parse(message.body)\n              this.messages.push(parseMessage);\n              this.scrollToBottom();\n            })\n          }\n\n      )\n    },\n\n    sendMessage(){\n      if(this.newMessage.trim()===\"\")return;\n      const message = {\n        senderEmail: this.senderEmail,\n        message: this.newMessage\n      }\n      this.stompClient.send(`/publish/`,JSON.stringify(message));\n      this.newMessage=\"\";\n    },\n    scrollToBottom(){\n      this.$nextTick(()=>{\n        const chatBox = this.$el.querySelector(\".chat-box\");\n        chatBox.scrollTop=chatBox.scrollHeight;\n      })\n    },\n    disconnectWebSocket(){\n      if (this.stompClient && this.stompClient.connected) {\n        this.stompClient.unsubscribe(`/topic/${this.roomId}`);\n        this.stompClient.disconnect();\n      }\n    }\n  },\n}\n\n</script>\n<style>\n.chat-box{\n  height: 300px;\n  overflow-y: auto;\n  border: 1px solid #ddd;\n  margin-bottom: 10px;\n\n}\n\n.chat-message{\n  margin-bottom:10px;\n\n}\n\n.sent{\n  text-align: right;\n}\n\n.received{\n  text-align: left;\n}\n</style>"],"mappings":";AAqCA,OAAOA,MAAK,MAAO,eAAe;AAClC,OAAOC,KAAI,MAAO,iBAAiB;AACnC;;AAEA,eAAe;EACbC,IAAIA,CAAA,EAAE;IACJ,OAAM;MACJC,QAAQ,EAAE,EAAE;MACZC,UAAU,EAAE,EAAE;MACdC,WAAW,EAAE,IAAI;MACjBC,KAAK,EAAE,EAAE;MACTC,WAAW,EAAE,IAAI;MACjBC,MAAM,EAAE;IACV;EACF,CAAC;EACDC,OAAOA,CAAA,EAAE;IACP,IAAI,CAACF,WAAU,GAAIG,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IAChD,IAAI,CAACH,MAAK,GAAI,IAAI,CAACI,MAAM,CAACC,MAAM,CAACL,MAAM;IACvC,IAAI,CAACM,gBAAgB,CAAC,CAAC;EACzB,CAAC;EACD;EACAC,gBAAgBA,CAACC,EAAE,EAAEC,IAAI,EAAEC,IAAI,EAAE;IAC/B,IAAI,CAACC,mBAAmB,CAAC,CAAC;IAC1BD,IAAI,CAAC,CAAC;EACR,CAAC;EACD;EACAE,aAAaA,CAAA,EAAG;IACd,IAAI,CAACD,mBAAmB,CAAC,CAAC;EAC5B,CAAC;EACDE,OAAO,EAAC;IACNP,gBAAgBA,CAAA,EAAE;MAChB,IAAG,IAAI,CAACT,WAAU,IAAK,IAAI,CAACA,WAAW,CAACiB,SAAS,EAAE;MACnD;MACA,MAAMC,MAAK,GAAI,IAAIvB,MAAM,CAAC,GAAGwB,OAAO,CAACC,GAAG,CAACC,oBAAoB,UAAU;MACvE,IAAI,CAACrB,WAAU,GAAIJ,KAAK,CAAC0B,IAAI,CAACJ,MAAM,CAAC;MACrC,IAAI,CAACjB,KAAI,GAAII,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;MAC1C,IAAI,CAACN,WAAW,CAACuB,OAAO,CAAC;QACnBC,aAAa,EAAE,UAAU,IAAI,CAACvB,KAAK;MAErC,CAAC,EACD,MAAI;QACF,IAAI,CAACD,WAAW,CAACyB,SAAS,CAAC,UAAU,IAAI,CAACtB,MAAM,EAAE,EAAEuB,OAAO,IAAG;UAC5D,MAAMC,YAAW,GAAIC,IAAI,CAACC,KAAK,CAACH,OAAO,CAACI,IAAI;UAC5C,IAAI,CAAChC,QAAQ,CAACiC,IAAI,CAACJ,YAAY,CAAC;UAChC,IAAI,CAACK,cAAc,CAAC,CAAC;QACvB,CAAC;MACH,CAEJ;IACF,CAAC;IAEDC,WAAWA,CAAA,EAAE;MACX,IAAG,IAAI,CAAClC,UAAU,CAACmC,IAAI,CAAC,CAAC,KAAG,EAAE,EAAC;MAC/B,MAAMR,OAAM,GAAI;QACdxB,WAAW,EAAE,IAAI,CAACA,WAAW;QAC7BwB,OAAO,EAAE,IAAI,CAAC3B;MAChB;MACA,IAAI,CAACC,WAAW,CAACmC,IAAI,CAAC,WAAW,EAACP,IAAI,CAACQ,SAAS,CAACV,OAAO,CAAC,CAAC;MAC1D,IAAI,CAAC3B,UAAU,GAAC,EAAE;IACpB,CAAC;IACDiC,cAAcA,CAAA,EAAE;MACd,IAAI,CAACK,SAAS,CAAC,MAAI;QACjB,MAAMC,OAAM,GAAI,IAAI,CAACC,GAAG,CAACC,aAAa,CAAC,WAAW,CAAC;QACnDF,OAAO,CAACG,SAAS,GAACH,OAAO,CAACI,YAAY;MACxC,CAAC;IACH,CAAC;IACD5B,mBAAmBA,CAAA,EAAE;MACnB,IAAI,IAAI,CAACd,WAAU,IAAK,IAAI,CAACA,WAAW,CAACiB,SAAS,EAAE;QAClD,IAAI,CAACjB,WAAW,CAAC2C,WAAW,CAAC,UAAU,IAAI,CAACxC,MAAM,EAAE,CAAC;QACrD,IAAI,CAACH,WAAW,CAAC4C,UAAU,CAAC,CAAC;MAC/B;IACF;EACF;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}