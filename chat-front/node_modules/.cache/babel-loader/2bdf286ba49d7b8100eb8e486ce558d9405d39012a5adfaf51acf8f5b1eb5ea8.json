{"ast":null,"code":"import { createApp } from 'vue';\nimport App from './App.vue';\nimport vuetify from \"./plugins/vuetify\";\nimport router from '@/router/index.js';\nimport axios from \"axios\";\nconst app = createApp(App);\naxios.interceptors.request.use(config => {\n  const token = localStorage.getItem(\"token\");\n  if (token) {\n    config.headers['Authorization'] = `Bearer ${token}`;\n  }\n  return config;\n}, error => {\n  //인터셉터를 무시하고 사용자의 본래 요청인 화면으로 라우팅한다.\n  return Promise.reject(error);\n});\napp.use(router);\napp.use(vuetify);\napp.mount('#app');","map":{"version":3,"names":["createApp","App","vuetify","router","axios","app","interceptors","request","use","config","token","localStorage","getItem","headers","error","Promise","reject","mount"],"sources":["/Users/dengo/Desktop/java/spring_websocket/chat-front/src/main.js"],"sourcesContent":["import { createApp } from 'vue'\nimport App from './App.vue'\nimport vuetify from \"./plugins/vuetify\";\nimport router from '@/router/index.js'\nimport axios from \"axios\";\n\nconst app = createApp(App);\n\naxios.interceptors.request.use(\n    config =>{\n        const token = localStorage.getItem(\"token\");\n        if (token){\n            config.headers['Authorization'] = `Bearer ${token}`\n\n        }\n        return config;\n    },\n    error => {\n        //인터셉터를 무시하고 사용자의 본래 요청인 화면으로 라우팅한다.\n        return Promise.reject(error);\n    }\n)\n\n\napp.use(router);\napp.use(vuetify);\napp.mount('#app');"],"mappings":"AAAA,SAASA,SAAS,QAAQ,KAAK;AAC/B,OAAOC,GAAG,MAAM,WAAW;AAC3B,OAAOC,OAAO,MAAM,mBAAmB;AACvC,OAAOC,MAAM,MAAM,mBAAmB;AACtC,OAAOC,KAAK,MAAM,OAAO;AAEzB,MAAMC,GAAG,GAAGL,SAAS,CAACC,GAAG,CAAC;AAE1BG,KAAK,CAACE,YAAY,CAACC,OAAO,CAACC,GAAG,CAC1BC,MAAM,IAAG;EACL,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAC3C,IAAIF,KAAK,EAAC;IACND,MAAM,CAACI,OAAO,CAAC,eAAe,CAAC,GAAG,UAAUH,KAAK,EAAE;EAEvD;EACA,OAAOD,MAAM;AACjB,CAAC,EACDK,KAAK,IAAI;EACL;EACA,OAAOC,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AAChC,CACJ,CAAC;AAGDT,GAAG,CAACG,GAAG,CAACL,MAAM,CAAC;AACfE,GAAG,CAACG,GAAG,CAACN,OAAO,CAAC;AAChBG,GAAG,CAACY,KAAK,CAAC,MAAM,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}