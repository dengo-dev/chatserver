{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport SockJS from 'sockjs-client';\nimport Stomp from 'webstomp-client';\n// import axios from 'axios';\n\nexport default {\n  data() {\n    return {\n      messages: [],\n      newMessage: \"\",\n      stompClient: null\n    };\n  },\n  created() {\n    this.connectWebSocket();\n  },\n  beforeUnmount() {\n    this.disconnectWebSocket();\n  },\n  methods: {\n    connectWebSocket() {\n      // sockjs는 websocket을 내장한 향상된 js라이브러리 http엔드포인트 사용.\n      const sockJs = new SockJS(`${process.env.VUE_APP_API_BASE_URL}/connect`);\n      this.stompClient = Stomp.over(sockJs);\n      this.stompClient.connect({}, () => {\n        this.stompClient.subscribe(`/topic/1`, message => {\n          console.log(message);\n          this.messages.push(message.data);\n          this.scrollToBottom();\n        });\n      });\n    },\n    sendMessage() {\n      if (this.newMessage.trim() === \"\") return;\n      this.stompClient.send(`/publish/1`, this.newMessage);\n      this.newMessage = \"\";\n    },\n    scrollToBottom() {\n      this.$nextTick(() => {\n        const chatBox = this.$el.querySelector(\".chat-box\");\n        chatBox.scrollTop = chatBox.scrollHeight;\n      });\n    },\n    disconnectWebSocket() {\n      // if (this.ws){\n      //   this.ws.close();\n      //   console.log(\"disconnected!!\")\n      //   this.ws=null;\n      // }\n    }\n  }\n};","map":{"version":3,"names":["SockJS","Stomp","data","messages","newMessage","stompClient","created","connectWebSocket","beforeUnmount","disconnectWebSocket","methods","sockJs","process","env","VUE_APP_API_BASE_URL","over","connect","subscribe","message","console","log","push","scrollToBottom","sendMessage","trim","send","$nextTick","chatBox","$el","querySelector","scrollTop","scrollHeight"],"sources":["/Users/dengo/Desktop/java/spring_websocket/chat-front/src/views/StompChatPage.vue"],"sourcesContent":["<template>\n  <v-container>\n    <v-row justify=\"center\">\n      <v-col cols=\"12\" md=\"8\">\n        <v-card>\n          <v-card-title class=\"text-center text-h5\">\n            채팅\n          </v-card-title>\n          <v-card-text>\n            <div class=\"chat-box\">\n              <div\n              v-for=\"(msg, index) in messages\"\n              :key=\"index\"\n              >\n                {{msg}}\n              </div>\n            </div>\n            <v-text-field\n              v-model=\"newMessage\"\n              label=\"메시지 입력\"\n              @keyup.enter=\"sendMessage\"\n\n            />\n              <v-btn color=\"primary\" block @click=\"sendMessage\">전송</v-btn>\n          </v-card-text>\n\n        </v-card>\n      </v-col>\n\n    </v-row>\n\n  </v-container>\n</template>\n\n\n<script>\nimport SockJS from 'sockjs-client';\nimport Stomp from 'webstomp-client';\n// import axios from 'axios';\n\nexport default {\n  data(){\n    return{\n      messages: [],\n      newMessage: \"\",\n      stompClient: null,\n\n    }\n  },\n  created(){\n    this.connectWebSocket();\n  },\n  beforeUnmount() {\n    this.disconnectWebSocket();\n  },\n  methods:{\n    connectWebSocket(){\n      // sockjs는 websocket을 내장한 향상된 js라이브러리 http엔드포인트 사용.\n      const sockJs = new SockJS(`${process.env.VUE_APP_API_BASE_URL}/connect`)\n      this.stompClient = Stomp.over(sockJs);\n\n      this.stompClient.connect({},\n          ()=>{\n            this.stompClient.subscribe(`/topic/1`,(message)=>{\n              console.log(message);\n              this.messages.push(message.data);\n              this.scrollToBottom();\n            })\n          }\n\n      )\n    },\n    sendMessage(){\n      if(this.newMessage.trim()===\"\")return;\n      this.stompClient.send(`/publish/1`,this.newMessage);\n      this.newMessage=\"\";\n    },\n    scrollToBottom(){\n      this.$nextTick(()=>{\n        const chatBox = this.$el.querySelector(\".chat-box\");\n        chatBox.scrollTop=chatBox.scrollHeight;\n      })\n    },\n    disconnectWebSocket(){\n      // if (this.ws){\n      //   this.ws.close();\n      //   console.log(\"disconnected!!\")\n      //   this.ws=null;\n      // }\n    }\n  },\n}\n\n</script>\n<style>\n.chat-box{\n  height: 300px;\n  overflow-y: auto;\n  border: 1px solid #ddd;\n  margin-bottom: 10px;\n\n}\n</style>"],"mappings":";AAoCA,OAAOA,MAAK,MAAO,eAAe;AAClC,OAAOC,KAAI,MAAO,iBAAiB;AACnC;;AAEA,eAAe;EACbC,IAAIA,CAAA,EAAE;IACJ,OAAM;MACJC,QAAQ,EAAE,EAAE;MACZC,UAAU,EAAE,EAAE;MACdC,WAAW,EAAE;IAEf;EACF,CAAC;EACDC,OAAOA,CAAA,EAAE;IACP,IAAI,CAACC,gBAAgB,CAAC,CAAC;EACzB,CAAC;EACDC,aAAaA,CAAA,EAAG;IACd,IAAI,CAACC,mBAAmB,CAAC,CAAC;EAC5B,CAAC;EACDC,OAAO,EAAC;IACNH,gBAAgBA,CAAA,EAAE;MAChB;MACA,MAAMI,MAAK,GAAI,IAAIX,MAAM,CAAC,GAAGY,OAAO,CAACC,GAAG,CAACC,oBAAoB,UAAU;MACvE,IAAI,CAACT,WAAU,GAAIJ,KAAK,CAACc,IAAI,CAACJ,MAAM,CAAC;MAErC,IAAI,CAACN,WAAW,CAACW,OAAO,CAAC,CAAC,CAAC,EACvB,MAAI;QACF,IAAI,CAACX,WAAW,CAACY,SAAS,CAAC,UAAU,EAAEC,OAAO,IAAG;UAC/CC,OAAO,CAACC,GAAG,CAACF,OAAO,CAAC;UACpB,IAAI,CAACf,QAAQ,CAACkB,IAAI,CAACH,OAAO,CAAChB,IAAI,CAAC;UAChC,IAAI,CAACoB,cAAc,CAAC,CAAC;QACvB,CAAC;MACH,CAEJ;IACF,CAAC;IACDC,WAAWA,CAAA,EAAE;MACX,IAAG,IAAI,CAACnB,UAAU,CAACoB,IAAI,CAAC,CAAC,KAAG,EAAE,EAAC;MAC/B,IAAI,CAACnB,WAAW,CAACoB,IAAI,CAAC,YAAY,EAAC,IAAI,CAACrB,UAAU,CAAC;MACnD,IAAI,CAACA,UAAU,GAAC,EAAE;IACpB,CAAC;IACDkB,cAAcA,CAAA,EAAE;MACd,IAAI,CAACI,SAAS,CAAC,MAAI;QACjB,MAAMC,OAAM,GAAI,IAAI,CAACC,GAAG,CAACC,aAAa,CAAC,WAAW,CAAC;QACnDF,OAAO,CAACG,SAAS,GAACH,OAAO,CAACI,YAAY;MACxC,CAAC;IACH,CAAC;IACDtB,mBAAmBA,CAAA,EAAE;MACnB;MACA;MACA;MACA;MACA;IAAA;EAEJ;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}